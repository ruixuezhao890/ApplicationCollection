#此文件从模板自动生成! 请勿更改!
set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_VERSION 1)
cmake_minimum_required(VERSION 3.26)

# specify cross-compilers and tools
set(CMAKE_C_COMPILER arm-none-eabi-gcc)
set(CMAKE_CXX_COMPILER arm-none-eabi-g++)
set(CMAKE_ASM_COMPILER  arm-none-eabi-gcc)
set(CMAKE_AR arm-none-eabi-ar)
set(CMAKE_OBJCOPY arm-none-eabi-objcopy)
set(CMAKE_OBJDUMP arm-none-eabi-objdump)
set(SIZE arm-none-eabi-size)
set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

# project settings
project(2048 C CXX ASM)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_C_STANDARD 11)

#Uncomment for hardware floating point
add_compile_definitions(ARM_MATH_CM4;ARM_MATH_MATRIX_CHECK;ARM_MATH_ROUNDING)
add_compile_options(-mfloat-abi=hard -mfpu=fpv4-sp-d16)
add_link_options(-mfloat-abi=hard -mfpu=fpv4-sp-d16)

#Uncomment for software floating point
#add_compile_options(-mfloat-abi=soft)

add_compile_options(-mcpu=cortex-m4 -mthumb -mthumb-interwork)
add_compile_options(-ffunction-sections -fdata-sections -fno-common -fmessage-length=0)

# uncomment to mitigate c++17 absolute addresses warnings
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-register")

# Enable assembler files preprocessing
add_compile_options($<$<COMPILE_LANGUAGE:ASM>:-x$<SEMICOLON>assembler-with-cpp>)

if ("${CMAKE_BUILD_TYPE}" STREQUAL "Release")
    message(STATUS "Maximum optimization for speed")
    add_compile_options(-Ofast)
elseif ("${CMAKE_BUILD_TYPE}" STREQUAL "RelWithDebInfo")
    message(STATUS "Maximum optimization for speed, debug info included")
    add_compile_options(-Ofast -g)
elseif ("${CMAKE_BUILD_TYPE}" STREQUAL "MinSizeRel")
    message(STATUS "Maximum optimization for size")
    add_compile_options(-Os)
else ()
    message(STATUS "Minimal optimization, debug info included")
    add_compile_options(-Og -g)
endif ()

include_directories(Core/Inc Drivers/STM32F4xx_HAL_Driver/Inc Drivers/STM32F4xx_HAL_Driver/Inc/Legacy Drivers/CMSIS/Device/ST/STM32F4xx/Include Drivers/CMSIS/Include
        Bridge
        Task
        BSP/LCD
        BSP/SYSTEM
        BSP/Touch

        Myapplication
        Myapplication/GAME2048

        Serial/BaseLib
        Serial/DataStream
        Serial/OtherLib
        MiddleDevice/LVGL
        MiddleDevice/LVGL/src
        MiddleDevice/LVGL/examples/porting
        MiddleDevice/LVGLCPP/src
        MiddleDevice/LVGLCPP

        MiddleDevice/boot_anim_ascii
        MiddleDevice/mooncake
        MiddleDevice/mooncake/app
        MiddleDevice/mooncake/input_system
        MiddleDevice/mooncake/simplekv

        MIddleware/FreeRTOS
        MIddleware/FreeRTOS/include
        MIddleware/FreeRTOS/portable/GCC/ARM_CM4F


)

add_definitions(-DDEBUG -DUSE_HAL_DRIVER -DSTM32F407xx)

file(GLOB_RECURSE SOURCES "Core/*.*" "Drivers/*.*"
        "Bridge/*.*"
        "Task/*.*"
        "BSP/Touch/*.*"
        "BSP/LCD/lcd.c"
        "BSP/SYSTEM/*.*"

        "Myapplication/GAME2048/*.*"
        "Myapplication/*.*"

        "MIddleware/FreeRTOS/*.*"
        "MIddleware/FreeRTOS/tasks.c"
        "MIddleware/FreeRTOS/include/*.*"
        "MIddleware/FreeRTOS/portable/GCC/ARM_CM4F/*.*"


        "MiddleDevice/boot_anim_ascii/boot_anim_ascii.cpp"
        "MiddleDevice/mooncake/*.*"
        "MiddleDevice/mooncake/app/*.*"
        "MiddleDevice/mooncake/input_system/*.*"

        "Serial/BaseLib/*.*"
        "Serial/DataStream/*.*"
        "Serial/OtherLib/*.*"

        "MiddleDevice/LVGL/*.*"
        "MiddleDevice/LVGL/src/*.*"
        "MiddleDevice/LVGL/examples/porting/*.*"

        "MiddleDevice/LVGLCPP/src/lvglpp/core/*.*"
        "MiddleDevice/LVGLCPP/src/lvglpp/draw/*.*"
        "MiddleDevice/LVGLCPP/src/lvglpp/font/font.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/misc/anim.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/misc/area.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/misc/color.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/misc/fs.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/misc/style.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/misc/timer.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/animimg/animimg.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/arc/arc.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/bar/bar.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/btnmatrix/btnmatrix.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/calendar/calendar.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/canvas/canvas.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/chart/chart.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/checkbox/checkbox.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/colorwheel/colorwheel.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/dropdown/dropdown.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/image/image.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/imgbtn/imgbtn.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/keyboard/keyboard.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/label/label.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/led/led.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/line/line.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/list/list.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/menu/menu.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/meter/meter.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/msgbox/msgbox.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/roller/roller.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/slider/slider.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/span/span.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/spinbox/spinbox.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/spinner/spinner.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/table/table.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/tabview/tabview.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/textarea/textarea.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/tileview/tileview.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/win/win.cpp""src/lvglpp/core/display.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/core/event.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/core/indev.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/core/object.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/core/group.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/core/theme.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/draw/desc.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/draw/image.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/draw/mask.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/font/font.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/animimg/animimg.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/arc/arc.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/bar/bar.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/btnmatrix/btnmatrix.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/calendar/calendar.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/canvas/canvas.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/chart/chart.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/checkbox/checkbox.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/colorwheel/colorwheel.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/dropdown/dropdown.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/image/image.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/imgbtn/imgbtn.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/keyboard/keyboard.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/label/label.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/led/led.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/line/line.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/list/list.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/menu/menu.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/meter/meter.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/msgbox/msgbox.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/roller/roller.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/slider/slider.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/span/span.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/spinbox/spinbox.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/spinner/spinner.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/table/table.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/tabview/tabview.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/textarea/textarea.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/tileview/tileview.cpp"
        "MiddleDevice/LVGLCPP/src/lvglpp/widgets/win/win.cpp"
)

set(LINKER_SCRIPT ${CMAKE_SOURCE_DIR}/STM32F407ZGTX_FLASH.ld)

add_link_options(-Wl,-gc-sections,--print-memory-usage,-Map=${PROJECT_BINARY_DIR}/${PROJECT_NAME}.map)
add_link_options(-mcpu=cortex-m4 -mthumb -mthumb-interwork)
add_link_options(-T ${LINKER_SCRIPT})

add_executable(${PROJECT_NAME}.elf ${SOURCES} ${LINKER_SCRIPT})

set(HEX_FILE ${PROJECT_BINARY_DIR}/${PROJECT_NAME}.hex)
set(BIN_FILE ${PROJECT_BINARY_DIR}/${PROJECT_NAME}.bin)

add_custom_command(TARGET ${PROJECT_NAME}.elf POST_BUILD
        COMMAND ${CMAKE_OBJCOPY} -Oihex $<TARGET_FILE:${PROJECT_NAME}.elf> ${HEX_FILE}
        COMMAND ${CMAKE_OBJCOPY} -Obinary $<TARGET_FILE:${PROJECT_NAME}.elf> ${BIN_FILE}
        COMMENT "Building ${HEX_FILE}
Building ${BIN_FILE}")
